<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
    <http:listener-config name="httpConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>

 <flow name="main">
       <vm:inbound-endpoint path="in" doc:name="VM"/>
        <!-- TODO add your service component here. This can also be a Spring bean using <spring-object bean="name"/> -->
       <append-string-transformer message=" Received" doc:name="Append String"/>
        <vm:outbound-endpoint path="out" doc:name="VM"/>
    </flow>

    <flow name="getHTTPTest">
        <http:listener config-ref="httpConfig" doc:name="User data" path="test" allowedMethods="GET">
        </http:listener>
        <logger category="getHTTPTest" level="INFO" message="Hello Mule" doc:name="Logger"/>
        <set-payload value="Hello Mule!" doc:name="Set Payload"/>
    </flow>


</mule>
